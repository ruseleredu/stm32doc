"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[6484],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var i=n(96540);const l={},o=i.createContext(l);function s(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:s(e.components),i.createElement(o.Provider,{value:t},e.children)}},54452:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"snippets/toggle-led","title":"Toggle built-in LED attached to PC13","description":"Code snipptes to toggle a LED.","source":"@site/docs/snippets/toggle-led.md","sourceDirName":"snippets","slug":"/snippets/toggle-led","permalink":"/stm32doc/docs/snippets/toggle-led","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/snippets/toggle-led.md","tags":[],"version":"current","frontMatter":{"title":"Toggle built-in LED attached to PC13","sidebar_label":"Toggle built-in LED","description":"Code snipptes to toggle a LED."},"sidebar":"tutorialSidebar","previous":{"title":"Introdu\xe7\xe3o","permalink":"/stm32doc/docs/snippets/intro"},"next":{"title":"Docusaurus","permalink":"/stm32doc/docs/category/docusaurus"}}');var l=n(74848),o=n(28453);const s={title:"Toggle built-in LED attached to PC13",sidebar_label:"Toggle built-in LED",description:"Code snipptes to toggle a LED."},r=void 0,a={},d=[{value:"Toggle with HAL_GPIO_WritePin and HAL_Delay",id:"toggle-with-hal_gpio_writepin-and-hal_delay",level:3},{value:"Toggle with HAL_GPIO_TogglePin",id:"toggle-with-hal_gpio_togglepin",level:3},{value:"Toggle with HAL_GPIO_WritePin if Button is pressed",id:"toggle-with-hal_gpio_writepin-if-button-is-pressed",level:3}];function g(e){const t={code:"code",h3:"h3",pre:"pre",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-c",metastring:'title="Core/Scr/main.c"',children:"/* Infinite loop */\r\n/* USER CODE BEGIN WHILE */\r\nwhile (1)\r\n{\r\n  // highlight-next-line\r\n  // Place your code HERE!\r\n  /* USER CODE END WHILE */\r\n\r\n  /* USER CODE BEGIN 3 */\r\n  // highlight-next-line\r\n  // Place your code HERE!\r\n}\r\n/* USER CODE END 3 */\n"})}),"\n",(0,l.jsx)(t.h3,{id:"toggle-with-hal_gpio_writepin-and-hal_delay",children:"Toggle with HAL_GPIO_WritePin and HAL_Delay"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-c",children:"// Toggle built-in LED attached to PC13\r\nHAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET); // LED ON\r\nHAL_Delay(100); /* Insert delay 100 ms */\r\nHAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET); // LED OFF\r\nHAL_Delay(100); /* Insert delay 100 ms */\n"})}),"\n",(0,l.jsx)(t.h3,{id:"toggle-with-hal_gpio_togglepin",children:"Toggle with HAL_GPIO_TogglePin"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-c",children:"// Toggle built-in LED attached to PC13\r\nHAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);\r\nHAL_Delay(100); /* Insert delay 100 ms */\n"})}),"\n",(0,l.jsx)(t.h3,{id:"toggle-with-hal_gpio_writepin-if-button-is-pressed",children:"Toggle with HAL_GPIO_WritePin if Button is pressed"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-c",children:"// If Button Is Pressed\r\nif (HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0))\r\n  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET); // LED OFF\r\nelse\r\n   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET); // LED ON\n"})})]})}function c(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(g,{...e})}):g(e)}}}]);