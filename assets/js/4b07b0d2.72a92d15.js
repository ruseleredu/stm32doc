"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[1190],{28453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>a});var r=o(96540);const n={},d=r.createContext(n);function i(e){const t=r.useContext(d);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(d.Provider,{value:t},e.children)}},96232:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"software/stm32cubemon/node-red-contrib-stm32cubemonitor-radar","title":"radar","description":"A Node-RED dashboard ui node to display point according to coordinates with a defined color on top of radar like image.","source":"@site/docs/software/stm32cubemon/radar.md","sourceDirName":"software/stm32cubemon","slug":"/node-red-contrib-stm32cubemonitor-radar","permalink":"/stm32doc/docs/node-red-contrib-stm32cubemonitor-radar","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/software/stm32cubemon/radar.md","tags":[],"version":"current","frontMatter":{"id":"node-red-contrib-stm32cubemonitor-radar","title":"radar","description":"A Node-RED dashboard ui node to display point according to coordinates with a defined color on top of radar like image.","slug":"/node-red-contrib-stm32cubemonitor-radar"},"sidebar":"tutorialSidebar","previous":{"title":"processing","permalink":"/stm32doc/docs/node-red-contrib-stm32cubemonitor-processing"},"next":{"title":"variables","permalink":"/stm32doc/docs/node-red-contrib-stm32cubemonitor-variables"}}');var n=o(74848),d=o(28453);const i={id:"node-red-contrib-stm32cubemonitor-radar",title:"radar",description:"A Node-RED dashboard ui node to display point according to coordinates with a defined color on top of radar like image.",slug:"/node-red-contrib-stm32cubemonitor-radar"},a=void 0,s={},c=[];function m(e){const t={code:"code",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'<script type="text/html" data-help-name="ui_radar">\n'})}),"\n",(0,n.jsx)(t.p,{children:"A Node-RED dashboard ui node to display point according to coordinates with a defined color on top of radar like image."}),"\n",(0,n.jsx)(t.p,{children:"It can display up to 4 differents points identified by the msg.topic value."}),"\n",(0,n.jsx)(t.p,{children:"Coordinates are defined by msg.payload.x and y values."}),"\n",(0,n.jsx)(t.p,{children:"In order to delete a point, an empty msg.paylaod can be send, if msg.topic is empty, all points are erased"}),"\n",(0,n.jsx)(t.p,{children:"Background image can be changed by any picture. Note that this picture file must be stored in the httpStatic directory defined in settings.js"})]})}function p(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}}}]);