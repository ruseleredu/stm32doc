"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[193],{2728:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>c,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"peripherals/gpio-config","title":"gpio-config","description":"","source":"@site/docs/peripherals/gpio-config.md","sourceDirName":"peripherals","slug":"/peripherals/gpio-config","permalink":"/stm32doc/docs/peripherals/gpio-config","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/peripherals/gpio-config.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"schematic","permalink":"/stm32doc/docs/hardware/schematic"},"next":{"title":"architecture","permalink":"/stm32doc/docs/software/architecture"}}');var o=n(4848),i=n(8453);const c={},s="gpio-config",a={},p=[];function d(e){const t={code:"code",h1:"h1",header:"header",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"gpio-config",children:"gpio-config"})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-c",children:"// Initialize GPIO for an LED\r\nHAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);\n"})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>s});var r=n(6540);const o={},i=r.createContext(o);function c(e){const t=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:c(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);