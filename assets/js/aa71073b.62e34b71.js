"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[8417],{28453:(e,r,n)=>{n.d(r,{R:()=>i,x:()=>a});var s=n(96540);const t={},o=s.createContext(t);function i(e){const r=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(o.Provider,{value:r},e.children)}},51546:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"tutorial-basics/tree-layout","title":"\ud83e\udded Emoji + Metadata + Tree Layout","description":"Here\'s a complete Python script that generates a visually appealing tree structure of your project folder using emoji icons and file metadata. The output is formatted as a Bash-style code block perfect for embedding in Docusaurus.","source":"@site/docs/tutorial-basics/create-folder-tree.md","sourceDirName":"tutorial-basics","slug":"/tree-layout","permalink":"/stm32doc/docs/tree-layout","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/tutorial-basics/create-folder-tree.md","tags":[],"version":"current","frontMatter":{"id":"tree-layout","title":"\ud83e\udded Emoji + Metadata + Tree Layout","slug":"/tree-layout"},"sidebar":"tutorialSidebar","previous":{"title":"Create a Page","permalink":"/stm32doc/docs/tutorial-basics/create-a-page"},"next":{"title":"\ud83d\udcc4 Create Multiple Docs Instances","permalink":"/stm32doc/docs/multiple-docs"}}');var t=n(74848),o=n(28453);const i={id:"tree-layout",title:"\ud83e\udded Emoji + Metadata + Tree Layout",slug:"/tree-layout"},a=void 0,l={},m=[{value:"Full Expressive Python Script",id:"full-expressive-python-script",level:2},{value:"\ud83d\udcc2 Project Structure",id:"-project-structure",level:3}];function c(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.p,{children:"Here's a complete Python script that generates a visually appealing tree structure of your project folder using emoji icons and file metadata. The output is formatted as a Bash-style code block perfect for embedding in Docusaurus."}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://emojipedia.org/microsoft",children:"Emojis from Microsoft"})}),"\n",(0,t.jsx)(r.h2,{id:"full-expressive-python-script",children:"Full Expressive Python Script"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://copilot.microsoft.com/shares/B7pvjR59PwjbFEnyQNiEJ",children:"https://copilot.microsoft.com/shares/B7pvjR59PwjbFEnyQNiEJ"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"generate_tree_md.py\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"import os\r\nimport datetime\r\n\r\n# \ud83d\udd27 Feature toggles\r\nINCLUDE_EMOJI = True\r\nINCLUDE_METADATA = False\r\nINCLUDE_COMMENTS = True\r\nSMART_FOLDER_LABELS = False\r\n\r\n# \ud83d\uddd2\ufe0f Manual file comments (extend as needed)\r\nMANUAL_COMMENTS = {\r\n    \"WebBrowser.js\": \"Main browser component\",\r\n    \"WebBrowser.module.css\": \"Browser styles\",\r\n    \"BrowserExamples.js\": \"Example components (optional)\",\r\n    \"README.md\": \"Project overview\",\r\n    \"config.json\": \"Configuration settings\"\r\n}\r\n\r\n# \ud83c\udfad Emoji mapping by file extension\r\ndef emoji_for_file(file_name):\r\n    ext = os.path.splitext(file_name)[1].lower()\r\n    return {\r\n        '.js': '\ud83d\udcdc',\r\n        '.ts': '\ud83d\udcd8',\r\n        '.css': '\ud83c\udfa8',\r\n        '.scss': '\ud83e\uddf5',\r\n        '.html': '\ud83c\udf10',\r\n        '.py': '\ud83d\udc0d',\r\n        '.md': '\ud83d\udcdd',\r\n        '.json': '\ud83d\udd27',\r\n        '.jpg': '\ud83d\uddbc\ufe0f',\r\n        '.png': '\ud83d\uddbc\ufe0f',\r\n        '.txt': '\ud83d\udcc4',\r\n        '.test.js': '\ud83e\uddea',\r\n        '.lock': '\ud83d\udd12',\r\n    }.get(ext, '\ud83d\udcc4')\r\n\r\n# \ud83d\udcc2 Emoji by folder purpose\r\ndef emoji_for_folder(folder_name):\r\n    mapping = {\r\n        'test': '\ud83e\uddea',\r\n        'tests': '\ud83e\uddea',\r\n        'components': '\ud83e\udde9',\r\n        'config': '\u2699\ufe0f',\r\n        'public': '\ud83c\udf10',\r\n        'docs': '\ud83d\udcda',\r\n        'scripts': '\ud83d\udcdc',\r\n        'assets': '\ud83c\udfa8',\r\n        'utils': '\ud83e\uddf0',\r\n    }\r\n    for key, icon in mapping.items():\r\n        if key.lower() in folder_name.lower():\r\n            return icon\r\n    return '\ud83d\udcc2'\r\n\r\n# \ud83d\udcca Generate metadata comment\r\ndef get_file_metadata_comment(file_path):\r\n    stats = os.stat(file_path)\r\n    size_kb = stats.st_size / 1024\r\n    mtime = datetime.datetime.fromtimestamp(stats.st_mtime)\r\n    ext = os.path.splitext(file_path)[1].lower().lstrip('.').upper() or \"Unknown\"\r\n    return f\"{ext} file, {size_kb:.1f} KB, modified {mtime.strftime('%Y-%m-%d %H:%M')}\"\r\n\r\n# \ud83c\udf33 Recursive folder walker\r\ndef map_folder_structure(root_path, indent=\"\"):\r\n    lines = []\r\n    items = sorted(os.listdir(root_path))\r\n    for idx, item in enumerate(items):\r\n        item_path = os.path.join(root_path, item)\r\n        is_last = idx == len(items) - 1\r\n        prefix = \"\u2514\u2500\u2500 \" if is_last else \"\u251c\u2500\u2500 \"\r\n        line_prefix = indent + prefix\r\n        # Folder line\r\n        if os.path.isdir(item_path):\r\n            folder_emoji = emoji_for_folder(item) if SMART_FOLDER_LABELS and INCLUDE_EMOJI else ('\ud83d\udcc1' if INCLUDE_EMOJI else '')\r\n            spacing = ' ' if INCLUDE_EMOJI else ''\r\n            line = f\"{line_prefix}{folder_emoji}{spacing}{item}/\"\r\n            lines.append(line)\r\n            new_indent = indent + (\"    \" if is_last else \"\u2502   \")\r\n            lines.extend(map_folder_structure(item_path, new_indent))\r\n        # File line\r\n        else:\r\n            file_emoji = emoji_for_file(item) if INCLUDE_EMOJI else ''\r\n            spacing = ' ' if INCLUDE_EMOJI else ''\r\n            comments = []\r\n\r\n            if INCLUDE_COMMENTS and item in MANUAL_COMMENTS:\r\n                comments.append(MANUAL_COMMENTS[item])\r\n            if INCLUDE_METADATA:\r\n                comments.append(get_file_metadata_comment(item_path))\r\n\r\n            comment_str = f\"  # {' | '.join(comments)}\" if comments else ''\r\n            line = f\"{line_prefix}{file_emoji}{spacing}{item}{comment_str}\"\r\n            lines.append(line)\r\n\r\n    return lines\r\n\r\n# \ud83e\uddea Wrap it all for Markdown embedding\r\ndef generate_docusaurus_bash_block(root_path):\r\n    root_name = os.path.basename(os.path.abspath(root_path))\r\n\r\n    if SMART_FOLDER_LABELS and INCLUDE_EMOJI:\r\n        top_icon = emoji_for_folder(root_name)\r\n    elif INCLUDE_EMOJI:\r\n        top_icon = '\ud83d\udcc2'\r\n    else:\r\n        top_icon = ''\r\n\r\n    spacing = ' ' if INCLUDE_EMOJI else ''\r\n    lines = [f\"{top_icon}{spacing}{root_name}/\"]\r\n    lines.extend(map_folder_structure(root_path))\r\n    return \"```bash\\n\" + \"\\n\".join(lines) + \"\\n```\"\r\n\r\n# \u25b6\ufe0f Example usage\r\noutput = generate_docusaurus_bash_block(\"src/components\")\r\nprint(output)\r\n\r\nwith open(\"project-structure.md\", \"w\", encoding=\"utf-8\") as f:\r\n    f.write(\"## \ud83d\udcc2 Project Structure\\n\\n\")\r\n    f.write(output)\n"})}),"\n",(0,t.jsx)(r.h3,{id:"-project-structure",children:"\ud83d\udcc2 Project Structure"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"# \ud83d\udd27 Feature toggles\r\nINCLUDE_EMOJI = True\r\nINCLUDE_METADATA = True\r\nINCLUDE_COMMENTS = True\r\nSMART_FOLDER_LABELS = True\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"\ud83e\udde9 components/\r\n\u251c\u2500\u2500 \ud83d\udcdc BashTerminal.js  # JS file, 5.3 KB, modified 2025-07-22 08:59\r\n\u251c\u2500\u2500 \ud83c\udfa8 BashTerminal.module.css  # CSS file, 3.1 KB, modified 2025-07-22 08:59\r\n\u251c\u2500\u2500 \ud83d\udcdc BrowserExamples.js  # Example components (optional) | JS file, 3.5 KB, modified 2025-07-22 08:59\r\n\u251c\u2500\u2500 \ud83d\udcc2 BrowserWindow/\r\n\u2502   \u251c\u2500\u2500 \ud83d\udcdc index.js  # JS file, 1.1 KB, modified 2025-07-22 08:59\r\n\u2502   \u2514\u2500\u2500 \ud83c\udfa8 styles.module.css  # CSS file, 1.6 KB, modified 2025-07-22 08:59\r\n\u251c\u2500\u2500 \ud83d\udcc2 HomepageFeatures/\r\n\u2502   \u251c\u2500\u2500 \ud83d\udcdc index.js  # JS file, 1.7 KB, modified 2025-07-22 08:59\r\n\u2502   \u2514\u2500\u2500 \ud83c\udfa8 styles.module.css  # CSS file, 0.1 KB, modified 2025-07-22 08:59\r\n\u251c\u2500\u2500 \ud83d\udcdc TerminalExamples.js  # JS file, 1.4 KB, modified 2025-07-22 08:59\r\n\u251c\u2500\u2500 \ud83d\udcdc WebBrowser.js  # Main browser component | JS file, 7.1 KB, modified 2025-07-22 08:59\r\n\u251c\u2500\u2500 \ud83c\udfa8 WebBrowser.module.css  # Browser styles | CSS file, 7.0 KB, modified 2025-07-22 08:59\r\n\u2514\u2500\u2500 \ud83d\udcdc YouTubeEmbed.js  # JS file, 1.1 KB, modified 2025-07-22 08:59\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"# \ud83d\udd27 Feature toggles\r\nINCLUDE_EMOJI = True\r\nINCLUDE_METADATA = False\r\nINCLUDE_COMMENTS = True\r\nSMART_FOLDER_LABELS = True\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"\ud83e\udde9 components/\r\n\u251c\u2500\u2500 \ud83d\udcdc BashTerminal.js\r\n\u251c\u2500\u2500 \ud83c\udfa8 BashTerminal.module.css\r\n\u251c\u2500\u2500 \ud83d\udcdc BrowserExamples.js  # Example components (optional)\r\n\u251c\u2500\u2500 \ud83d\udcc2 BrowserWindow/\r\n\u2502   \u251c\u2500\u2500 \ud83d\udcdc index.js\r\n\u2502   \u2514\u2500\u2500 \ud83c\udfa8 styles.module.css\r\n\u251c\u2500\u2500 \ud83d\udcc2 HomepageFeatures/\r\n\u2502   \u251c\u2500\u2500 \ud83d\udcdc index.js\r\n\u2502   \u2514\u2500\u2500 \ud83c\udfa8 styles.module.css\r\n\u251c\u2500\u2500 \ud83d\udcdc TerminalExamples.js\r\n\u251c\u2500\u2500 \ud83d\udcdc WebBrowser.js  # Main browser component\r\n\u251c\u2500\u2500 \ud83c\udfa8 WebBrowser.module.css  # Browser styles\r\n\u2514\u2500\u2500 \ud83d\udcdc YouTubeEmbed.js\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"# \ud83d\udd27 Feature toggles\r\nINCLUDE_EMOJI = True\r\nINCLUDE_METADATA = False\r\nINCLUDE_COMMENTS = True\r\nSMART_FOLDER_LABELS = False\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"\ud83d\udcc2 components/\r\n\u251c\u2500\u2500 \ud83d\udcdc BashTerminal.js\r\n\u251c\u2500\u2500 \ud83c\udfa8 BashTerminal.module.css\r\n\u251c\u2500\u2500 \ud83d\udcdc BrowserExamples.js  # Example components (optional)\r\n\u251c\u2500\u2500 \ud83d\udcc2 BrowserWindow/\r\n\u2502   \u251c\u2500\u2500 \ud83d\udcdc index.js\r\n\u2502   \u2514\u2500\u2500 \ud83c\udfa8 styles.module.css\r\n\u251c\u2500\u2500 \ud83d\udcc2 HomepageFeatures/\r\n\u2502   \u251c\u2500\u2500 \ud83d\udcdc index.js\r\n\u2502   \u2514\u2500\u2500 \ud83c\udfa8 styles.module.css\r\n\u251c\u2500\u2500 \ud83d\udcdc TerminalExamples.js\r\n\u251c\u2500\u2500 \ud83d\udcdc WebBrowser.js  # Main browser component\r\n\u251c\u2500\u2500 \ud83c\udfa8 WebBrowser.module.css  # Browser styles\r\n\u2514\u2500\u2500 \ud83d\udcdc YouTubeEmbed.js\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"# \ud83d\udd27 Feature toggles\r\nINCLUDE_EMOJI = False\r\nINCLUDE_METADATA = False\r\nINCLUDE_COMMENTS = True\r\nSMART_FOLDER_LABELS = False\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"components/\r\n\u251c\u2500\u2500 BashTerminal.js\r\n\u251c\u2500\u2500 BashTerminal.module.css\r\n\u251c\u2500\u2500 BrowserExamples.js  # Example components (optional)\r\n\u251c\u2500\u2500 BrowserWindow/\r\n\u2502   \u251c\u2500\u2500 index.js\r\n\u2502   \u2514\u2500\u2500 styles.module.css\r\n\u251c\u2500\u2500 HomepageFeatures/\r\n\u2502   \u251c\u2500\u2500 index.js\r\n\u2502   \u2514\u2500\u2500 styles.module.css\r\n\u251c\u2500\u2500 TerminalExamples.js\r\n\u251c\u2500\u2500 WebBrowser.js  # Main browser component\r\n\u251c\u2500\u2500 WebBrowser.module.css  # Browser styles\r\n\u2514\u2500\u2500 YouTubeEmbed.js\n"})})]})}function d(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);