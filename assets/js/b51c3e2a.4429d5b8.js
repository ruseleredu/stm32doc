"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[9995],{1135:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>d,metadata:()=>n,toc:()=>i});const n=JSON.parse('{"id":"software/loadmx","title":"LoadMX","description":"Load STM32CubeMX Script.","source":"@site/docs/software/loadmx.md","sourceDirName":"software","slug":"/loadmx","permalink":"/stm32doc/docs/loadmx","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/software/loadmx.md","tags":[],"version":"current","frontMatter":{"id":"loadmx","title":"LoadMX","description":"Load STM32CubeMX Script.","slug":"/loadmx"},"sidebar":"tutorialSidebar","previous":{"title":"GitHub","permalink":"/stm32doc/docs/github"},"next":{"title":"Node-RED","permalink":"/stm32doc/docs/node-red"}}');var r=a(4848),o=a(8453);const d={id:"loadmx",title:"LoadMX",description:"Load STM32CubeMX Script.",slug:"/loadmx"},s=void 0,c={},i=[{value:"Como carregar um script do STM32CubeMX",id:"como-carregar-um-script-do-stm32cubemx",level:2}];function l(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/ELT73A-LAB-TPL/CubeMX",children:"https://github.com/ELT73A-LAB-TPL/CubeMX"})}),"\n",(0,r.jsx)(t.h2,{id:"como-carregar-um-script-do-stm32cubemx",children:"Como carregar um script do STM32CubeMX"}),"\n",(0,r.jsx)(t.p,{children:"Call for Help (--help, -h, /?)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"LoadMX --help\n"})}),"\n",(0,r.jsx)(t.p,{children:"Run STM32CubeMX interactively"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"LoadMX -i\n"})}),"\n",(0,r.jsx)(t.p,{children:"Opens STM32CubeMX and loads default values for Project Name, Script and Code Generation (STM32F411CEUx, BaseScript.txt and N)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"LoadMX\n"})}),"\n",(0,r.jsx)(t.p,{children:"Load with Project Name\r\nOpens STM32CubeMX with provided Project Name and loads default values for Script and Code Generation (BaseScript.txt and N)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"LoadMX ProjectName\n"})}),"\n",(0,r.jsx)(t.p,{children:"Opens STM32CubeMX with provided Project Name and Script Name and loads default value for Code Generation (N)"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"LoadMX ProjectName ScriptName.txt\n"})}),"\n",(0,r.jsx)(t.p,{children:"Opens STM32CubeMX with provided Project Name, Script Name and generate code"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"LoadMX ProjectName ScriptName.txt Y\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>d,x:()=>s});var n=a(6540);const r={},o=n.createContext(r);function d(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);