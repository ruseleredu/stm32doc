"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[9995],{1135:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"software/loadmx","title":"LoadMX","description":"Load STM32CubeMX Script.","source":"@site/docs/software/loadmx.md","sourceDirName":"software","slug":"/loadmx","permalink":"/stm32doc/docs/loadmx","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/software/loadmx.md","tags":[],"version":"current","frontMatter":{"id":"loadmx","title":"LoadMX","description":"Load STM32CubeMX Script.","slug":"/loadmx"},"sidebar":"tutorialSidebar","previous":{"title":"GitHub","permalink":"/stm32doc/docs/github"},"next":{"title":"Node-RED","permalink":"/stm32doc/docs/node-red"}}');var t=a(4848),r=a(8453);const c={id:"loadmx",title:"LoadMX",description:"Load STM32CubeMX Script.",slug:"/loadmx"},i=void 0,s={},d=[{value:"Running STM32CubeMX in command-line mode",id:"running-stm32cubemx-in-command-line-mode",level:2},{value:"Como carregar um script do STM32CubeMX",id:"como-carregar-um-script-do-stm32cubemx",level:2}];function l(e){const n={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:(0,t.jsx)(n.a,{href:"https://github.com/ELT73A-LAB-TPL/CubeMX",children:"https://github.com/ELT73A-LAB-TPL/CubeMX"})}),"\n",(0,t.jsx)(n.h2,{id:"running-stm32cubemx-in-command-line-mode",children:"Running STM32CubeMX in command-line mode"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://www.st.com/resource/en/user_manual/um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf",children:"https://www.st.com/resource/en/user_manual/um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To run STM32CubeMX in interactive command-line mode, use the following command line:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'"%STM32CubeMX_PATH%\\jre\\bin\\java" -jar "%STM32CubeMX_PATH%\\STM32CubeMX.exe" -i\n'})}),"\n",(0,t.jsx)(n.p,{children:"To run STM32CubeMX in command-line mode, getting commands from a script, use the following command line:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'"%STM32CubeMX_PATH%\\jre\\bin\\java" -jar "%STM32CubeMX_PATH%\\STM32CubeMX.exe" -s ScriptToLoad.txt\n'})}),"\n",(0,t.jsx)(n.p,{children:"To run STM32CubeMX in command-line mode getting commands from a script and without UI, use the following command line:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'"%STM32CubeMX_PATH%\\jre\\bin\\java" -jar "%STM32CubeMX_PATH%\\STM32CubeMX.exe" -q ScriptToLoad.txt\n'})}),"\n",(0,t.jsx)(n.p,{children:"To generate a script"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"export script ScriptToLoad.txt\n"})}),"\n",(0,t.jsx)(n.h2,{id:"como-carregar-um-script-do-stm32cubemx",children:"Como carregar um script do STM32CubeMX"}),"\n",(0,t.jsx)(n.p,{children:"Call for Help (--help, -h, /?)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"LoadMX --help\n"})}),"\n",(0,t.jsx)(n.p,{children:"Run STM32CubeMX interactively"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"LoadMX -i\n"})}),"\n",(0,t.jsx)(n.p,{children:"Opens STM32CubeMX and loads default values for Project Name, Script and Code Generation (STM32F411CEUx, BaseScript.txt and N)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"LoadMX\n"})}),"\n",(0,t.jsx)(n.p,{children:"Load with Project Name\r\nOpens STM32CubeMX with provided Project Name and loads default values for Script and Code Generation (BaseScript.txt and N)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"LoadMX ProjectName\n"})}),"\n",(0,t.jsx)(n.p,{children:"Opens STM32CubeMX with provided Project Name and Script Name and loads default value for Code Generation (N)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"LoadMX ProjectName ScriptName.txt\n"})}),"\n",(0,t.jsx)(n.p,{children:"Opens STM32CubeMX with provided Project Name, Script Name and generate code"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"LoadMX ProjectName ScriptName.txt Y\n"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>c,x:()=>i});var o=a(6540);const t={},r=o.createContext(t);function c(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);