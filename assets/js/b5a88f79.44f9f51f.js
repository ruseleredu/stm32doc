"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[5905],{28453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>s});var t=o(96540);const i={},d=t.createContext(i);function r(e){const n=t.useContext(d);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(d.Provider,{value:n},e.children)}},61229:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"software/stm32cubemon/node-red-contrib-stm32cubemonitor-3Dnode","title":"3Dnode","description":"A Node-RED dashboard node to display the picture of a board, 3D oriented according to given coordinates.","source":"@site/docs/software/stm32cubemon/3Dnode.md","sourceDirName":"software/stm32cubemon","slug":"/node-red-contrib-stm32cubemonitor-3Dnode","permalink":"/stm32doc/docs/node-red-contrib-stm32cubemonitor-3Dnode","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/software/stm32cubemon/3Dnode.md","tags":[],"version":"current","frontMatter":{"id":"node-red-contrib-stm32cubemonitor-3Dnode","title":"3Dnode","description":"A Node-RED dashboard node to display the picture of a board, 3D oriented according to given coordinates.","slug":"/node-red-contrib-stm32cubemonitor-3Dnode"},"sidebar":"tutorialSidebar","previous":{"title":"Intro","permalink":"/stm32doc/docs/stm32cubemonintro"},"next":{"title":"ST Nodes","permalink":"/stm32doc/docs/stm32cubemonstnodes"}}');var i=o(74848),d=o(28453);const r={id:"node-red-contrib-stm32cubemonitor-3Dnode",title:"3Dnode",description:"A Node-RED dashboard node to display the picture of a board, 3D oriented according to given coordinates.",slug:"/node-red-contrib-stm32cubemonitor-3Dnode"},s=void 0,c={},a=[{value:"Properties",id:"properties",level:3},{value:"Input",id:"input",level:3}];function l(e){const n={code:"code",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'<script type="text/html" data-help-name="ui_3D">\n'})}),"\n",(0,i.jsx)(n.p,{children:"A Node-RED dashboard node to display the picture of a board, 3D oriented according to given coordinates."}),"\n",(0,i.jsx)(n.p,{children:"The orientation is given by the input message. The picture is embedded in the widget and can not be changed"}),"\n",(0,i.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(n.p,{children:"GroupDashboard group"}),"\n",(0,i.jsx)(n.p,{children:"Allows to define the dashboard group in which the 3D board will be rendered."}),"\n",(0,i.jsx)(n.p,{children:"Size(width x height) or auto"}),"\n",(0,i.jsx)(n.p,{children:"Allows to specify the widget size in:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Fixed mode"})," In that case, you specify the width and height of the widget with fixed numbers of units."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Auto mode"})," In this case, the widget will fill the width of the dashboard group."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"NameString"}),"\n",(0,i.jsx)(n.p,{children:"The name of the widget in the editor."}),"\n",(0,i.jsx)(n.h3,{id:"input",children:"Input"}),"\n",(0,i.jsx)(n.p,{children:"payloadobject"}),"\n",(0,i.jsx)(n.p,{children:"payload is an object representing the orientation. The payload object holds the 3 axis rotations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"x :"})," Rotation along X axis. The X axis is the horizontal axis on the screen (vertical screen)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"y :"})," Rotation along y axis. The Y axis is the vertical axis on the screen"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"z :"})," Rotation along z axis. The Z axis is perpendicular to the screen plane"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The following example shows an input ",(0,i.jsx)(n.code,{children:"msg"})," for the 3D node:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'        "payload": {\r\n            "x": 80,\r\n            "y": 48,\r\n            "z": 35            \r\n        }\n'})})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);