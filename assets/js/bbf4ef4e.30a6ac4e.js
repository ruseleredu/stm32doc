"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[8673],{562:(e,s,r)=>{r.d(s,{T9:()=>d,jC:()=>c,r8:()=>u});r(6540);var t=r(1470),n=r(9365),a=r(4907),i=r(1622),o=r(8774),l=r(4848);function c(){return(0,l.jsx)("div",{children:(0,l.jsxs)(i.A,{summary:(0,l.jsx)("summary",{children:"Verifique o seu ambiente de desenvolvimento!"}),children:[(0,l.jsxs)("p",{children:["Vers\xe3o do ",(0,l.jsx)(o.A,{to:"/docs/git",children:"git"})," e configura\xe7\xf5es:"]}),(0,l.jsx)(a.A,{className:"language-bash",children:"git --version"}),(0,l.jsx)(a.A,{className:"language-bash",children:"git config --list --show-origin"}),(0,l.jsxs)("p",{children:["Vers\xe3o do ",(0,l.jsx)(o.A,{to:"/docs/github-cli",children:"GitHub CLI"})," e status de login:"]}),(0,l.jsx)(a.A,{className:"language-bash",children:"gh --version"}),(0,l.jsx)(a.A,{className:"language-bash",children:"gh auth status"}),(0,l.jsxs)("p",{children:["Vers\xe3o do ",(0,l.jsx)(o.A,{to:"/docs/vs-code",children:"Visual Studio Code"})," e extens\xf5es instaladas:"]}),(0,l.jsx)(a.A,{className:"language-bash",children:"code -v"}),(0,l.jsx)(a.A,{className:"language-bash",children:'code --list-extensions --profile "STM32"'}),(0,l.jsx)("p",{children:"Vers\xe3o do gcc e gdb instaladas:"}),(0,l.jsx)(a.A,{className:"language-bash",children:"gcc --version"}),(0,l.jsx)(a.A,{className:"language-bash",children:"gbd --version"})]})})}function d(){return(0,l.jsx)("div",{children:(0,l.jsxs)(i.A,{summary:(0,l.jsx)("summary",{children:"Configure a ferramenta git"}),children:[(0,l.jsx)("p",{children:"Configure o nome de usu\xe1rio para todos os reposit\xf3rios locais ligados \xe0s suas transa\xe7\xf5es de commit:"}),(0,l.jsx)(a.A,{className:"language-bash",children:'git config --global user.name "Your Name"'}),(0,l.jsx)("p",{children:" Configure o email de usu\xe1rio para todos os reposit\xf3rios locais ligados \xe0s suas transa\xe7\xf5es de commit:"}),(0,l.jsx)(a.A,{className:"language-bash",children:'git config --global user.email "you@example.com"'}),(0,l.jsx)("p",{children:"\xc9 recomendado verificar se a instala\xe7\xe3o do seu Git n\xe3o est\xe1 realizando nenhuma transforma\xe7\xe3o entre LFs e CRLFs."}),(0,l.jsx)(a.A,{className:"language-bash",children:"git config --global core.autocrlf false"}),(0,l.jsxs)("p",{children:["Configure o ",(0,l.jsx)(o.A,{to:"/docs/git",children:"git"})," para usar o ",(0,l.jsx)(o.A,{to:"/docs/vs-code",children:"Visual Studio Code"})," como editor padr\xe3o para tarefas como escrever mensagens de commit ou rebases interativos"]}),(0,l.jsx)(a.A,{className:"language-bash",children:'git config --global core.editor "code --wait"'}),(0,l.jsx)("p",{children:"Liste as configura\xe7\xf5es aplicadas:"}),(0,l.jsx)(a.A,{className:"language-bash",children:"git config --list --show-origin"})]})})}function u(){return(0,l.jsxs)(t.A,{children:[(0,l.jsxs)(n.A,{value:"STM32CubeMX",label:"STM32CubeMX",default:!0,children:[(0,l.jsx)("p",{children:(0,l.jsxs)("b",{children:[(0,l.jsx)(o.A,{to:"/docs/stm32cubemx",children:"STM32CubeMX"})," is an initialization code generator."]})}),(0,l.jsx)("ul",{children:(0,l.jsxs)("li",{children:[(0,l.jsx)("a",{href:"https://www.st.com/en/development-tools/stm32cubemx.html#get-software",target:"_blank",children:"STM32CubeMX"})," is a graphical tool that allows a very easy configuration of STM32 microcontrollers and microprocessors, as well as the generation of the corresponding initialization C code for the Arm\xae Cortex\xae-M core or a partial Linux\xae Device Tree for Arm\xae Cortex\xae-A core, through a step-by-step process."]})})]}),(0,l.jsxs)(n.A,{value:"STM32CubeCLT",label:"STM32CubeCLT",children:[(0,l.jsx)("p",{children:(0,l.jsxs)("b",{children:[(0,l.jsx)(o.A,{to:"/docs/stm32cubeclt",children:"STM32CubeCLT"})," is an all-in-one multi-OS command-line toolset, which is part of the STM32Cube ecosystem."]})}),(0,l.jsx)("ul",{children:(0,l.jsxs)("li",{children:[(0,l.jsx)("a",{href:"https://www.st.com/en/development-tools/stm32cubeclt.html#get-software",target:"_blank",children:"STM32CubeCLT"}),"  includes GNU C/C++ for Arm\xae toolchain executables, GDB debugger, and STM32CubeProgrammer (STM32CubeProg) utility. It provides system view descriptors for the entire STM32 MCU portfolio and associate each STM32 MCU and development board with the appropriate SVD."]})})]}),(0,l.jsxs)(n.A,{value:"ST-MCU-FINDER",label:"ST-MCU-FINDER",children:[(0,l.jsx)("p",{children:(0,l.jsx)("b",{children:"STM32 and STM8 product finder for desktops."})}),(0,l.jsx)("ul",{children:(0,l.jsxs)("li",{children:[(0,l.jsx)("a",{href:"https://www.st.com/en/development-tools/st-mcu-finder-pc.html#get-software",target:"_blank",children:"ST-MCU-FINDER-PC"})," allows exploring and connecting to the complete portfolio of STM32 Arm\xae Cortex\xae-M, STM32 Arm\xae Cortex\xae-A7, and STM8 microcontrollers, microprocessors, development boards and examples directly from the developer\u2019s desktop environment."]})})]}),(0,l.jsxs)(n.A,{value:"STM32CubeProg",label:"STM32CubeProg",children:[(0,l.jsx)("p",{children:(0,l.jsxs)("b",{children:[(0,l.jsx)(o.A,{to:"/docs/stm32cubeprg",children:"STM32CubeProg"})," is an all-in-one multi-OS software tool for programming STM32 products."]})}),(0,l.jsx)("ul",{children:(0,l.jsxs)("li",{children:[(0,l.jsx)("a",{href:"https://www.st.com/en/development-tools/stm32cubeprog.html#get-software",target:"_blank",children:"STM32CubeProg"})," provides an easy-to-use and efficient environment for reading, writing, and verifying device memory through both the debug interface (JTAG and SWD) and the bootloader interface (UART and USB DFU, I2C, SPI, and CAN). STM32CubeProgrammer is delivered in GUI (graphical user interface) and CLI (command-line interface) versions."]})})]}),(0,l.jsxs)(n.A,{value:"STM32CubeMonitor",label:"STM32CubeMonitor",children:[(0,l.jsx)("p",{children:(0,l.jsxs)("b",{children:[(0,l.jsx)(o.A,{to:"/docs/stm32cubemon",children:"STM32CubeMonitor"})," is a Monitoring tool to test STM32 applications at run-time."]})}),(0,l.jsx)("ul",{children:(0,l.jsxs)("li",{children:[(0,l.jsx)("a",{href:"https://www.st.com/en/development-tools/stm32cubemonitor.html#get-software",target:"_blank",children:"STM32CubeMonitor"})," family of tools helps to fine-tune and diagnose STM32 applications at run-time by reading and visualizing their variables in real-time. With non-intrusive monitoring, STM32CubeMonitor preserves the real-time behavior of applications, and perfectly complements traditional debugging tools to perform application profiling."]})})]})]})}},1470:(e,s,r)=>{r.d(s,{A:()=>C});var t=r(6540),n=r(4164),a=r(3104),i=r(6347),o=r(205),l=r(7485),c=r(1682),d=r(679);function u(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h(e){const{values:s,children:r}=e;return(0,t.useMemo)(()=>{const e=s??function(e){return u(e).map(({props:{value:e,label:s,attributes:r,default:t}})=>({value:e,label:s,attributes:r,default:t}))}(r);return function(e){const s=(0,c.XI)(e,(e,s)=>e.value===s.value);if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[s,r])}function m({value:e,tabValues:s}){return s.some(s=>s.value===e)}function p({queryString:e=!1,groupId:s}){const r=(0,i.W6)(),n=function({queryString:e=!1,groupId:s}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:e,groupId:s});return[(0,l.aZ)(n),(0,t.useCallback)(e=>{if(!n)return;const s=new URLSearchParams(r.location.search);s.set(n,e),r.replace({...r.location,search:s.toString()})},[n,r])]}function b(e){const{defaultValue:s,queryString:r=!1,groupId:n}=e,a=h(e),[i,l]=(0,t.useState)(()=>function({defaultValue:e,tabValues:s}){if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${s.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const r=s.find(e=>e.default)??s[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:s,tabValues:a})),[c,u]=p({queryString:r,groupId:n}),[b,g]=function({groupId:e}){const s=function(e){return e?`docusaurus.tab.${e}`:null}(e),[r,n]=(0,d.Dv)(s);return[r,(0,t.useCallback)(e=>{s&&n.set(e)},[s,n])]}({groupId:n}),x=(()=>{const e=c??b;return m({value:e,tabValues:a})?e:null})();(0,o.A)(()=>{x&&l(x)},[x]);return{selectedValue:i,selectValue:(0,t.useCallback)(e=>{if(!m({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),g(e)},[u,g,a]),tabValues:a}}var g=r(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=r(4848);function j({className:e,block:s,selectedValue:r,selectValue:t,tabValues:i}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),c=e=>{const s=e.currentTarget,n=o.indexOf(s),a=i[n].value;a!==r&&(l(s),t(a))},d=e=>{let s=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const r=o.indexOf(e.currentTarget)+1;s=o[r]??o[0];break}case"ArrowLeft":{const r=o.indexOf(e.currentTarget)-1;s=o[r]??o[o.length-1];break}}s?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.A)("tabs",{"tabs--block":s},e),children:i.map(({value:e,label:s,attributes:t})=>(0,f.jsx)("li",{role:"tab",tabIndex:r===e?0:-1,"aria-selected":r===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...t,className:(0,n.A)("tabs__item",x.tabItem,t?.className,{"tabs__item--active":r===e}),children:s??e},e))})}function v({lazy:e,children:s,selectedValue:r}){const a=(Array.isArray(s)?s:[s]).filter(Boolean);if(e){const e=a.find(e=>e.props.value===r);return e?(0,t.cloneElement)(e,{className:(0,n.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:a.map((e,s)=>(0,t.cloneElement)(e,{key:s,hidden:e.props.value!==r}))})}function T(e){const s=b(e);return(0,f.jsxs)("div",{className:(0,n.A)("tabs-container",x.tabList),children:[(0,f.jsx)(j,{...s,...e}),(0,f.jsx)(v,{...s,...e})]})}function C(e){const s=(0,g.A)();return(0,f.jsx)(T,{...e,children:u(e.children)},String(s))}},5117:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>u,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"tutorial-basics/tabs","title":"Tabs examples","description":"STM32Cube initialization code generator.","source":"@site/docs/tutorial-basics/tabs.md","sourceDirName":"tutorial-basics","slug":"/tabs","permalink":"/stm32doc/docs/tabs","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/tutorial-basics/tabs.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"tabs","sidebar_position":2,"title":"Tabs examples","slug":"/tabs"},"sidebar":"tutorialSidebar","previous":{"title":"Docu YouTube videos","permalink":"/stm32doc/docs/tutorial-basics/docusaurus-videos"},"next":{"title":"Markdown Features","permalink":"/stm32doc/docs/tutorial-basics/markdown-features"}}');var n=r(4848),a=r(8453),i=r(1470),o=r(9365),l=r(562);const c={id:"tabs",sidebar_position:2,title:"Tabs examples",slug:"/tabs"},d=void 0,u={},h=[];function m(e){const s={a:"a",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components},{Details:r}=s;return r||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(l.r8,{}),"\n",(0,n.jsxs)(i.A,{children:[(0,n.jsxs)(o.A,{value:"STM32CubeMX",label:"STM32CubeMX",default:!0,children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"STM32Cube initialization code generator."})}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.st.com/en/development-tools/stm32cubemx.html",children:"STM32CubeMX"})," is a graphical tool that allows a very easy configuration of STM32 microcontrollers and microprocessors, as well as the generation of the corresponding initialization C code for the Arm\xae Cortex\xae-M core or a partial Linux\xae Device Tree for Arm\xae Cortex\xae-A core, through a step-by-step process."]}),"\n"]})]}),(0,n.jsxs)(o.A,{value:"STM32CubeCLT",label:"STM32CubeCLT",children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"STM32CubeCLT is an all-in-one multi-OS command-line toolset, which is part of the STM32Cube ecosystem."})}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.st.com/en/development-tools/stm32cubeclt.html",children:"STM32CubeCLT"})," includes GNU C/C++ for Arm\xae toolchain executables, GDB debugger, and STM32CubeProgrammer (STM32CubeProg) utility. It provides system view descriptors for the entire STM32 MCU portfolio and associate each STM32 MCU and development board with the appropriate SVD."]}),"\n"]})]}),(0,n.jsxs)(o.A,{value:"ST-MCU-FINDER",label:"ST-MCU-FINDER",children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"STM32 and STM8 product finder for desktops."})}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.st.com/en/development-tools/st-mcu-finder-pc.html",children:"ST-MCU-FINDER-PC"})," allows exploring and connecting to the complete portfolio of STM32 Arm\xae Cortex\xae-M, STM32 Arm\xae Cortex\xae-A7, and STM8 microcontrollers, microprocessors, development boards and examples directly from the developer\u2019s desktop environment."]}),"\n"]})]}),(0,n.jsxs)(o.A,{value:"STM32CubeProg",label:"STM32CubeProg",children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"STM32CubeProg is an all-in-one multi-OS software tool for programming STM32 products."})}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.st.com/en/development-tools/stm32cubeprog.html",children:"STM32CubeProg"})," provides an easy-to-use and efficient environment for reading, writing, and verifying device memory through both the debug interface (JTAG and SWD) and the bootloader interface (UART and USB DFU, I2C, SPI, and CAN). STM32CubeProgrammer is delivered in GUI (graphical user interface) and CLI (command-line interface) versions."]}),"\n"]})]}),(0,n.jsxs)(o.A,{value:"STM32CubeMonitor",label:"STM32CubeMonitor",children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"Monitoring tool to test STM32 applications at run-time."})}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.st.com/en/development-tools/stm32cubemonitor.html",children:"STM32CubeMonitor"})," family of tools helps to fine-tune and diagnose STM32 applications at run-time by reading and visualizing their variables in real-time. With non-intrusive monitoring, STM32CubeMonitor preserves the real-time behavior of applications, and perfectly complements traditional debugging tools to perform application profiling."]}),"\n"]})]}),(0,n.jsxs)(o.A,{value:"STM32CubeIDE",label:"STM32CubeIDE",children:[(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"Integrated Development Environment for STM32."})}),(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.a,{href:"https://www.st.com/en/development-tools/stm32cubeide.html",children:"STM32CubeIDE"}),"  is an advanced C/C++ development platform with peripheral configuration, code generation, code compilation, and debug features for STM32 microcontrollers and microprocessors. It is based on the Eclipse\xae/CDT\u2122 framework and GCC toolchain for the development, and GDB for the debugging."]}),"\n"]})]})]}),"\n",(0,n.jsxs)(i.A,{children:[(0,n.jsxs)(o.A,{value:"vscode",label:"VS Code",children:[(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://code.visualstudio.com/",children:"VS Code"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://marketplace.visualstudio.com/items?itemName=stmicroelectronics.stm32-vscode-extension",children:"STM32Cube for Visual Studio Code"})}),"\n"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"winget install -e --id Microsoft.VisualStudioCode\n"})})]}),(0,n.jsxs)(o.A,{value:"git",label:"Git",default:!0,children:[(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://git-scm.com/",children:"git"})}),"\n"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"winget install -e --id Git.Git\n"})})]}),(0,n.jsxs)(o.A,{value:"gh",label:"GitHub CLI",children:[(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://cli.github.com/",children:"GitHub CLI"})}),"\n"]}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"winget install --id GitHub.cli\n"})})]})]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:'import Tabs from "@theme/Tabs";\nimport TabItem from "@theme/TabItem";\n'})}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)("summary",{children:"Descri\xe7\xe3o aqui com tabela de op\xe7\xf5es..."}),(0,n.jsxs)(i.A,{children:[(0,n.jsx)(o.A,{value:"apple",label:"Apple",default:!0,children:(0,n.jsx)(s.p,{children:"This is an apple \ud83c\udf4e"})}),(0,n.jsx)(o.A,{value:"orange",label:"Orange",children:(0,n.jsx)(s.p,{children:"This is an orange \ud83c\udf4a"})}),(0,n.jsx)(o.A,{value:"banana",label:"Banana",children:(0,n.jsx)(s.p,{children:"This is a banana \ud83c\udf4c"})})]})]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)("summary",{children:"Descri\xe7\xe3o aqui com tabela de op\xe7\xf5es e c\xf3digo..."}),(0,n.jsxs)(i.A,{children:[(0,n.jsx)(o.A,{value:"apple",label:"Apple",default:!0,children:(0,n.jsx)(s.p,{children:"This is an apple \ud83c\udf4e"})}),(0,n.jsx)(o.A,{value:"orange",label:"Orange",children:(0,n.jsx)(s.p,{children:"This is an orange \ud83c\udf4a"})}),(0,n.jsx)(o.A,{value:"github-cli",label:"GitHub CLI",children:(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"gh auth login\n"})})})]})]}),"\n",(0,n.jsxs)(r,{children:[(0,n.jsx)("summary",{children:"Descri\xe7\xe3o aqui com c\xf3digo..."}),(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"gh auth login\n"})})]})]})}function p(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}},9365:(e,s,r)=>{r.d(s,{A:()=>i});r(6540);var t=r(4164);const n={tabItem:"tabItem_Ymn6"};var a=r(4848);function i({children:e,hidden:s,className:r}){return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.A)(n.tabItem,r),hidden:s,children:e})}}}]);