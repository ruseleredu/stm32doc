"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[8944],{6759:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"intro","title":"Introdu\xe7\xe3o","description":"Introdu\xe7\xe3o as aulas de laborat\xf3rio","source":"@site/labs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/stm32doc/labs/intro","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Introdu\xe7\xe3o","description":"Introdu\xe7\xe3o as aulas de laborat\xf3rio"},"sidebar":"api","next":{"title":"Organiza\xe7\xf5es","permalink":"/stm32doc/labs/orgs"}}');var s=i(4848),r=i(8453);const o={sidebar_position:1,title:"Introdu\xe7\xe3o",description:"Introdu\xe7\xe3o as aulas de laborat\xf3rio"},a="Aulas de Laborat\xf3rio",c={},l=[{value:"Git commands",id:"git-commands",level:2},{value:"Running STM32CubeMX in command-line mode",id:"running-stm32cubemx-in-command-line-mode",level:2},{value:"Load STM32CubeMX Script",id:"load-stm32cubemx-script",level:3},{value:"References",id:"references",level:2},{value:"STM32 Arm\xae Cortex\xae MCU wiki",id:"stm32-arm-cortex-mcu-wiki",level:3},{value:"MiniF4-STM32F401CEU6",id:"minif4-stm32f401ceu6",level:3},{value:"STM32CubeF4 MCU Firmware Package",id:"stm32cubef4-mcu-firmware-package",level:3},{value:"STM32 Development Tools",id:"stm32-development-tools",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"aulas-de-laborat\xf3rio",children:"Aulas de Laborat\xf3rio"})}),"\n",(0,s.jsx)(n.h2,{id:"git-commands",children:"Git commands"}),"\n",(0,s.jsxs)(n.p,{children:["How to config ",(0,s.jsx)(n.a,{href:"https://git-scm.com/",children:"git"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'git config --global user.name "Your Name"\ngit config --global user.email yourmail@domain.tld\n'})}),"\n",(0,s.jsx)(n.p,{children:"It's recommended to verify that the your Git installation is not performing any transformation between LFs and CRLFs."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git config --global core.autocrlf false\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"git config --list --show-origin"})," command lists all the Git configuration variables and their values, along with the file path where each setting is defined. This is useful for troubleshooting and understanding which configuration file is overriding another."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git config list --show-origin\n"})}),"\n",(0,s.jsx)(n.h2,{id:"running-stm32cubemx-in-command-line-mode",children:"Running STM32CubeMX in command-line mode"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.st.com/resource/en/user_manual/um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf",children:"https://www.st.com/resource/en/user_manual/um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To run STM32CubeMX in interactive command-line mode, use the following command line:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'"%STM32CubeMX_PATH%\\jre\\bin\\java" -jar "%STM32CubeMX_PATH%\\STM32CubeMX.exe" -i\n'})}),"\n",(0,s.jsx)(n.p,{children:"To run STM32CubeMX in command-line mode, getting commands from a script, use the following command line:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'"%STM32CubeMX_PATH%\\jre\\bin\\java" -jar "%STM32CubeMX_PATH%\\STM32CubeMX.exe" -s ScriptToLoad.txt\n'})}),"\n",(0,s.jsx)(n.p,{children:"To run STM32CubeMX in command-line mode getting commands from a script and without UI, use the following command line:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'"%STM32CubeMX_PATH%\\jre\\bin\\java" -jar "%STM32CubeMX_PATH%\\STM32CubeMX.exe" -q ScriptToLoad.txt\n'})}),"\n",(0,s.jsx)(n.p,{children:"To generate a script"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"export script ScriptToLoad.txt\n"})}),"\n",(0,s.jsx)(n.h3,{id:"load-stm32cubemx-script",children:"Load STM32CubeMX Script"}),"\n",(0,s.jsx)(n.p,{children:"Call for Help (--help, -h, /?)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"LoadMX --help\n"})}),"\n",(0,s.jsx)(n.p,{children:"Run STM32CubeMX interactively"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"LoadMX -i\n"})}),"\n",(0,s.jsx)(n.p,{children:"Opens STM32CubeMX and loads default values for Project Name, Script and Code Generation (STM32F411CEUx, BaseScript.txt and N)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"LoadMX\n"})}),"\n",(0,s.jsx)(n.p,{children:"Load with Project Name\nOpens STM32CubeMX with provided Project Name and loads default values for Script and Code Generation (BaseScript.txt and N)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"LoadMX ProjectName\n"})}),"\n",(0,s.jsx)(n.p,{children:"Opens STM32CubeMX with provided Project Name and Script Name and loads default value for Code Generation (N)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"LoadMX ProjectName ScriptName.txt\n"})}),"\n",(0,s.jsx)(n.p,{children:"Opens STM32CubeMX with provided Project Name, Script Name and generate code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"LoadMX ProjectName ScriptName.txt Y\n"})}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsx)(n.h3,{id:"stm32-arm-cortex-mcu-wiki",children:"STM32 Arm\xae Cortex\xae MCU wiki"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://wiki.st.com/stm32mcu/",children:"https://wiki.st.com/stm32mcu/"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"minif4-stm32f401ceu6",children:"MiniF4-STM32F401CEU6"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/WeActStudio/WeActStudio.MiniSTM32F4x1",children:"https://github.com/WeActStudio/WeActStudio.MiniSTM32F4x1"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"stm32cubef4-mcu-firmware-package",children:"STM32CubeF4 MCU Firmware Package"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/STMicroelectronics/STM32CubeF4",children:"https://github.com/STMicroelectronics/STM32CubeF4"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/STMicroelectronics/STM32Cube_MCU_Overall_Offer",children:"https://github.com/STMicroelectronics/STM32Cube_MCU_Overall_Offer"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"stm32-development-tools",children:"STM32 Development Tools"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.st.com/en/development-tools/stm32cubemx.html",children:"https://www.st.com/en/development-tools/stm32cubemx.html"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.st.com/en/development-tools/stm32cubeclt.html",children:"https://www.st.com/en/development-tools/stm32cubeclt.html"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.st.com/en/development-tools/stm32cubeprog.html",children:"https://www.st.com/en/development-tools/stm32cubeprog.html"})}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);