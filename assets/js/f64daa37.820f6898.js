"use strict";(self.webpackChunkstm_32_doc=self.webpackChunkstm_32_doc||[]).push([[6587],{28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>c});var i=r(96540);const o={},s=i.createContext(o);function t(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),i.createElement(s.Provider,{value:n},e.children)}},50242:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"software/stm32cubemon/node-red-contrib-stm32cubemonitor-acquisition","title":"acquisition","description":"Allow to define and/or select a probe configuration (probe name, protocol and frequency), open and close the connection and send commands to the selected probe.","source":"@site/docs/software/stm32cubemon/acquisition.md","sourceDirName":"software/stm32cubemon","slug":"/node-red-contrib-stm32cubemonitor-acquisition","permalink":"/stm32doc/docs/node-red-contrib-stm32cubemonitor-acquisition","draft":false,"unlisted":false,"editUrl":"https://github.com/ruseleredu/stm32doc/edit/main/docs/software/stm32cubemon/acquisition.md","tags":[],"version":"current","frontMatter":{"id":"node-red-contrib-stm32cubemonitor-acquisition","title":"acquisition","description":"Allow to define and/or select a probe configuration (probe name, protocol and frequency), open and close the connection and send commands to the selected probe.","slug":"/node-red-contrib-stm32cubemonitor-acquisition"},"sidebar":"tutorialSidebar","previous":{"title":"YouTube Videos","permalink":"/stm32doc/docs/stm32cubemonvideos"},"next":{"title":"acquisitionjlink","permalink":"/stm32doc/docs/node-red-contrib-stm32cubemonitor-acquisitionjlink"}}');var o=r(74848),s=r(28453);const t={id:"node-red-contrib-stm32cubemonitor-acquisition",title:"acquisition",description:"Allow to define and/or select a probe configuration (probe name, protocol and frequency), open and close the connection and send commands to the selected probe.",slug:"/node-red-contrib-stm32cubemonitor-acquisition"},c=void 0,d={},l=[{value:"Properties",id:"properties",level:3},{value:"Input",id:"input",level:3},{value:"Details",id:"details",level:3},{value:"Properties",id:"properties-1",level:3},{value:"Output",id:"output",level:3},{value:"Details",id:"details-1",level:3},{value:"Properties",id:"properties-2",level:3}];function a(e){const n={a:"a",code:"code",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'<script type="text/x-red" data-help-name="acquisition out">\n'})}),"\n",(0,o.jsx)(n.p,{children:"Allow to define and/or select a probe configuration (probe name, protocol and frequency), open and close the connection and send commands to the selected probe."}),"\n",(0,o.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,o.jsx)(n.p,{children:"Probe Configprobe configuration"}),"\n",(0,o.jsx)(n.p,{children:"This property allows to define and/or select a probe configuration (probe name, protocol and frequency )"}),"\n",(0,o.jsx)(n.p,{children:"The blink LED button could be used to identify the connected probe by making its LED blinked."}),"\n",(0,o.jsx)(n.p,{children:"Namestring"}),"\n",(0,o.jsx)(n.p,{children:'Name of the node in the flow, "acquisition out" if empty.'}),"\n",(0,o.jsx)(n.h3,{id:"input",children:"Input"}),"\n",(0,o.jsxs)(n.p,{children:["Each input msg will need a ",(0,o.jsx)(n.code,{children:"topic"})," and a ",(0,o.jsx)(n.code,{children:"payload"})," to be processed"]}),"\n",(0,o.jsx)(n.p,{children:"topicstring"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"topic"})," possible values are"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"read"})," to send a command of one shot read"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"start"})," to send a command to START acquisition"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"stop"})," to send a command to STOP acquisition"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"payloadobject"}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"payload"})," is an object representing the variables group configuration defined in the variables node. The payload object holds several properties summarizing what have been set in the configuration panel of the variables node."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"groupname"})," string"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"variablelist"})," array of variable"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"mode"}),"string"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"frequency"}),"number (0 for sequential loop)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"accesspoint"}),"number"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"details",children:"Details"}),"\n",(0,o.jsx)(n.p,{children:"The acquisition out node is designed to be typically front linked with one or several variables nodes"}),"\n",(0,o.jsx)(n.p,{children:"basic flow for acquisition out node"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'<script type="text/x-red" data-help-name="acquisition in">\n'})}),"\n",(0,o.jsx)(n.p,{children:"Allow to define and/or select a probe configuration (probe name, protocol and frequency), and receive data from the selected probe."}),"\n",(0,o.jsx)(n.h3,{id:"properties-1",children:"Properties"}),"\n",(0,o.jsx)(n.p,{children:"Probe Configprobe configuration"}),"\n",(0,o.jsx)(n.p,{children:"This property allows to define and/or select a probe configuration (probe name, protocol and frequency )"}),"\n",(0,o.jsx)(n.p,{children:"The  blink LED  button could be used to identify the connected probe by making its LED blinked."}),"\n",(0,o.jsx)(n.p,{children:"Namestring"}),"\n",(0,o.jsx)(n.p,{children:'Name of the node in the flow, "acquisition in" if empty.'}),"\n",(0,o.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,o.jsxs)(n.p,{children:["Two outputs are defined, one port labelled ",(0,o.jsx)(n.code,{children:"data"})," for the measurement and one labelled ",(0,o.jsx)(n.code,{children:"error"})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"error"})," output ",(0,o.jsx)(n.code,{children:"msg.payload"})," is the error message string, the ",(0,o.jsx)(n.code,{children:"msg.topic"})," defines the error level"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"data"})," output ",(0,o.jsx)(n.code,{children:"msg.payload"})," is an object representing the variable measurements done at specific intervals."]}),"\n",(0,o.jsx)(n.p,{children:"payloadobject"}),"\n",(0,o.jsx)(n.p,{children:"The payload object holds several properties:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"first"})," boolean, true when this is the first measurement after a start."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"groupname"})," string, the name of the 'variable group' these measurements are referring to."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"data"})," array of array of duplets\r\nEach array of duplets is referring to a variable. Each duplet represents the result of a single target memory read.*   ",(0,o.jsx)(n.code,{children:"x"})," number, representing the timestamp","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"y"})," number, representing the read value in memory target"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The following example shows an output ",(0,o.jsx)(n.code,{children:"msg"})," for an acquisition in node:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'      {\r\n        "payload": {\r\n          "data": \\[\r\n            \\[\r\n              {\r\n                "y": 0,\r\n                "x": 1560850927936\r\n              }\r\n            \\],\r\n            \\[\r\n              {\r\n                "y": 0,\r\n                "x": 1560850927936\r\n              }\r\n            \\],\r\n            \\[\r\n              {\r\n                "y": 463,\r\n                "x": 1560850927936\r\n              }\r\n            \\],\r\n            \\[\r\n              {\r\n                "y": 2048,\r\n                "x": 1560850927936\r\n              }\r\n            \\],\r\n            \\[\r\n              {\r\n                "y": 78,\r\n                "x": 1560850927939\r\n              }\r\n            \\]\r\n          \\],\r\n          "first": false,\r\n          "groupname": "nv\\_group2"\r\n        }\r\n      }\n'})}),"\n",(0,o.jsx)(n.h3,{id:"details-1",children:"Details"}),"\n",(0,o.jsx)(n.p,{children:"The acquisition in node is designed to be typically back linked with one or several processing nodes"}),"\n",(0,o.jsx)(n.p,{children:"basic flow for acquisition in node"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'<script type="text/x-red" data-help-name="probe">\n'})}),"\n",(0,o.jsx)(n.p,{children:"Allow to define a probe configuration : probe name, protocol and frequency"}),"\n",(0,o.jsxs)(n.p,{children:["If no probe is detected, it may be a driver issue or another software using the probe. Please see the ",(0,o.jsx)(n.a,{href:"https://wiki.st.com/stm32mcu/wiki/STM32CubeMonitor:Troubleshooting",children:"wiki"})," for more information."]}),"\n",(0,o.jsx)(n.h3,{id:"properties-2",children:"Properties"}),"\n",(0,o.jsx)(n.p,{children:"Probe Namestring"}),"\n",(0,o.jsx)(n.p,{children:"Allow to select a specific probe among all connected probes"}),"\n",(0,o.jsx)(n.p,{children:"Protocolstring"}),"\n",(0,o.jsx)(n.p,{children:"Allow to select a protocol among the protocols supported by the selected probe"}),"\n",(0,o.jsx)(n.p,{children:"Frequencystring"}),"\n",(0,o.jsx)(n.p,{children:"Allow to select a frequency among the frequency supported by the selected probe"}),"\n",(0,o.jsx)(n.p,{children:"STlink firmware version : information regarding the STlink Firmware version currently used by the selected probe. Main features missing depending on STlink Firmware version:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Blink LED"})," New in ST-Link/V2 from version J28"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"TCP Support"})," New in ST-Link/V2 from version J28"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Read Memory 16 bits"})," New in ST-Link/V2 from version J26"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Write Memory 16 bits"})," New in ST-Link/V2 from version J26"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Set JTAG frequency"})," New in ST-Link/V2 from version J24"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Set SWD frequency"})," New in ST-Link/V2 from version J20"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Get Last Read Write Status"})," New in ST-Link/V2 from version J15"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);